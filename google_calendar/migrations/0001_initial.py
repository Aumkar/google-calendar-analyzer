# Generated by Django 2.2.7 on 2019-11-17 06:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserMetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(help_text='Token used to access the content', max_length=256)),
                ('refresh_token', models.CharField(help_text='Token used for refreshing token when access token is expired', max_length=256)),
                ('next_sync_token', models.CharField(blank=True, help_text='This token is used to pull delta events from calendar API', max_length=32)),
                ('user', models.OneToOneField(help_text='User for which meta data is stored', on_delete=django.db.models.deletion.CASCADE, related_name='cal_meta_data', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(help_text='Id of the event generated by google calendar', max_length=256, unique=True)),
                ('summary', models.CharField(help_text='Title of the event', max_length=256)),
                ('description', models.TextField(blank=True, help_text='Event description')),
                ('location', models.TextField(blank=True, help_text='Location of the event')),
                ('is_creator', models.BooleanField(help_text='Whether user has created the event')),
                ('creator_email', models.EmailField(blank=True, help_text='Email id of the person who has created', max_length=254)),
                ('is_attendee', models.BooleanField(help_text='True when user is present in attendees and has accepted the invitation, False otherwise')),
                ('start_datetime', models.DateTimeField(help_text='Datetime when event starts')),
                ('end_datetime', models.DateTimeField(help_text='Datetime when event ends')),
                ('created_at', models.DateTimeField(help_text='Datetime when event is created on google calendar')),
                ('user', models.ForeignKey(help_text='User to which event belongs', on_delete=django.db.models.deletion.PROTECT, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email of the attendee', max_length=254)),
                ('response', models.CharField(choices=[('needs_action', 'Needs Action'), ('declined', 'Declined'), ('tentative', 'Tentative'), ('accepted', 'Accepted')], help_text='Response from the attendee', max_length=16)),
                ('event', models.ForeignKey(help_text='Event associated with the attendee', on_delete=django.db.models.deletion.CASCADE, related_name='attendees', to='google_calendar.Event')),
            ],
            options={
                'unique_together': {('event', 'email')},
            },
        ),
    ]
